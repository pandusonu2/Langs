Comment by #
Multiline comment
=begin
This is a multiline comment
=end

data types = numbers, strings, booleans
my_num=25
my_num=true
my_num="Ruby"
functions=(+,-,*,/,**,%)

print "x\n" or puts "x"
print "length".length
print "esrever".reverse
.downcase and .upcase  
.capitalize #First letter of string upper case, rest all small
Multiple functions can be used like "string".downcase.reverse.length

gets #gets input, but ruby automatically adds a blank line
.chomp #removes the extra line added by gets

printing variables
print "This is a #{variable}"

n=Integer(gets.chomp)
if num<0
	puts ">0"
elsif num<0
	puts "<0"
else
	puts "0"
end
another type is unless <condition> <S1> else <S2> end #Goes to first, if condition is false

#checking if a sting has a substring
"string".include? "xyz"
#substituting in string
"string".gsub!(/s/,"th")   #gsub=global substitution

while <condition>
	body
end
util <condition> #like unless of for
	body
end
for i in 1...10	#range is [1,10)   ".." is for [1,10]
	puts i #body
end
loop do
	break if <condition> #to come out of loop, not a part of syntax
end
#continue counterpart is "next if <condition>"

arr=[1,2,3]
arr.each { |item| puts item} 
arr.each do |x|
	print "#{x}"
end
1000.times do
	print "xyz"
end
1000.times { print "xyz" }

hash={key1=>value1,key2=>value2,key3=>value3}
print hash[key1]
hash=Hash.new
hash[key1]=value1

